managed implementation in class zbp_d437d_i_travel unique;
with draft;


define behavior for YD437d_I_Travel alias Travel //alias <alias_name>
persistent table yd437d_travel
draft table yd437d_travel_d

lock master
total etag ChangedAt
etag master LocalChangedAt
//authorization master ( instance )
//etag master <field_name>
authorization master ( instance )
{
  field ( readonly, numbering : managed ) Trguid;
  field ( readonly ) AgencyID, TravelID, Status;
  //  field ( mandatory ) CustomerID, StartDate, EndDate;
  field ( mandatory ) EndDate;
  field ( features : instance ) CustomerID, StartDate;
  create;
  //  update;
  update ( features : instance );
  delete;

  static action issue_message;

  //  action set_to_cancelled;
  action ( features : instance ) set_to_cancelled;

  determination determineSemanticKey on modify { create; }

  validation validateCustomer on save
  { create;
    field CustomerID;
  }
  validation validateStartDate on save
  { create;
    field StartDate;
  }
  validation validateEndDate on save
  { create;
    field EndDate;
  }
  validation validateSequence on save
  { create;
    field StartDate, EndDate;
  }

  // explicitly declare the draft actions
  draft action Edit;
  draft action Activate;
  draft action Discard;
  draft action Resume;
  //draft determine action Prepare;
  // assign prepare to validations/determinations
  draft determine action Prepare
  {
    validation validateCustomer;
    validation validateStartDate;
    validation validateEndDate;
    validation validateSequence;
  }

  mapping for Yd437d_travel corresponding
  {
    AgencyID = agencynum;
    TravelDescription = trdesc;
    CustomerID = customid;
    StartDate = stdat;
    EndDate = enddat;
    ChangedAt = changed_at;
    ChangedBy = changed_by;
    LocalChangedAt = loc_changed_at;
  }
}